plugins {
    alias libs.plugins.mdg.plugin
    alias libs.plugins.fabric.loom apply false
}

allprojects { p ->
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = rootProject.group
    version = rootProject.version
    base.archivesName = "${rootProject.name}-${p.name.toLowerCase(Locale.ROOT)}-${libs.versions.minecraft.get()}"

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    javadoc {
        include "**/api/**"
    }

    jar {
        manifest {
            attributes([
                'Specification-Title'     : rootProject.modname,
                'Specification-Vendor'    : rootProject.modauthor,
                'Specification-Version'   : rootProject.version,
                //'Implementation-Commit-Time': versioning.getGitCommitDate(),
                //'Implementation-Commit': versioning.getGitCommit(),
                'Build-On-Minecraft'      : libs.versions.minecraft.get(),
            ])
        }

        from("LICENSE") {
            rename { "${it}-${rootProject.name}"}
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    dependencies {
        compileOnly libs.jetbrains.annotations
        implementation libs.pngj
        compileOnly libs.autoservice
        annotationProcessor libs.autoservice
    }
}

modsDotGroovy {
    dslVersion = libs.versions.mdg.dsl.get()
    platform 'multiloader'
    multiloader {
        common = project(':common')
        forge = []
        fabric = [project(':fabric')]
        quilt = []
    }
    source.set project(':common').sourceSets.main
}
